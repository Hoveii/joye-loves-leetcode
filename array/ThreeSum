class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        n = len(nums)
        res = []
        for i in range(n-2):
            j = i+1
            k = n-1
            while j<k:
                sum = nums[i]+nums[j]+nums[k]
                if sum<0:
                    j=j+1 
                elif sum>0:
                    k=k-1
                else:
                    res.append([i,j,k])
        return res 


class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        n = len(nums)
        res = []
        num1 = nums[0]
        num2 = nums[1]
        for i in range(n-2):
            for j in range(i+1,n-1):
                if not (nums[i]==num1 and nums[j]==num2):
                    num3 = 0 -nums[i]-nums[j]
                    if num3 in nums[j+1:]:
                        num1 = nums[i]
                        num2 = nums[j]
                        res.append([nums1,nums2,num3])
        return res 

class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        n = len(nums)
        nums.sort()
        ans = list()
        for first in range(n):

            print("_____")
            print(first)
            if first > 0 and nums[first] == nums[first - 1]:
                continue
            third = n - 1
            target = -nums[first]
            print(target)
            for second in range(first + 1, n):
                if second > first + 1 and nums[second] == nums[second - 1]:
                    continue
                while second < third and nums[second] + nums[third] > target:
                    third -= 1
                if second == third:
                    break
                if nums[second] + nums[third] == target:
                    ans.append([nums[first], nums[second], nums[third]])

class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        n = len(nums)
        res = []
        for i in range(n-2):
            for j in range(i+1,n-1):
                num3 = 0 -nums[i]-nums[j]
                if num3 in nums[j+1:]:
                    num1 = nums[i]
                    num2 = nums[j]
                    if [num1,num2,num3] not in res:
                        res.append([num1,num2,num3])
        return res 